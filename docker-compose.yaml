services:
  redis:
    image: "redis:6.2"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always

  minio:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: qwerdsaf
      MINIO_ROOT_PASSWORD: 88888888556556556
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network
    restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 3012
      POSTGRES_DB: Compiler_DB
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  worker1:
    build:
      context: /java-worker
    image: compiler-worker:latest
    container_name: worker1
    ports:
      - "5001:5000"
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=qwerdsaf
      - MINIO_SECRET_KEY=88888888556556556
      - MINIO_BUCKET_NAME=my-bucket
    depends_on:
      - minio
    networks:
      - app-network
    restart: always
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  worker2:
    build:
      context: /java-worker
    image: compiler-worker:latest
    container_name: worker2
    ports:
      - "5002:5000"
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=qwerdsaf
      - MINIO_SECRET_KEY=88888888556556556
      - MINIO_BUCKET_NAME=my-bucket
    depends_on:
      - minio
    networks:
      - app-network
    restart: always
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  python-worker1:
    build:
      context: /python-worker
    image: python-java-worker:latest
    container_name: python-worker1
    ports:
      - "6001:6000"
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=qwerdsaf
      - MINIO_SECRET_KEY=88888888556556556
      - MINIO_BUCKET_NAME=my-bucket
    depends_on:
      - minio
    networks:
      - app-network
    restart: always
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  python-worker2:
    build:
      context: /python-worker
    image: python-java-worker:latest
    container_name: python-worker2
    ports:
      - "6002:6000"
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=qwerdsaf
      - MINIO_SECRET_KEY=88888888556556556
      - MINIO_BUCKET_NAME=my-bucket
    depends_on:
      - minio
    networks:
      - app-network
    restart: always
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  dispatcher:
    build:
      context: /dispatcher
    image: dispatcher:latest
    container_name: dispatcher
    ports:
      - "8081:8081"
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=qwerdsaf
      - MINIO_SECRET_KEY=88888888556556556
      - MINIO_BUCKET_NAME=my-bucket
      - WORKER_URLS=http://worker1:5000,http://worker2:5000
      - PYTHON_WORKER_URLS=http://python-worker1:6000,http://python-worker2:6000
    depends_on:
      - minio
      - worker1
      - worker2
      - python-worker1
      - python-worker2
    networks:
      - app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  oc-manager:
    build:
      context: /oc-manager
    image: oc-manager:latest
    container_name: oc-manager
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/Compiler_DB
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 3012
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL: "true"
      UPLOAD_DIRECTORY: /app/uploads
      GIT_CLONE_DIRECTORY: /tmp/git-clones
      DISPATCHER_URL: http://dispatcher:8081
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: qwerdsaf
      MINIO_SECRET_KEY: 88888888556556556
      MINIO_BUCKET_NAME: my-bucket
      SPRING_REDIS_HOST: redis
      SPRING_SESSION_STORE_TYPE: redis
      FEIGN_CLIENT_CONFIG_DEFAULT_CONNECTTIMEOUT: 5000
      FEIGN_CLIENT_CONFIG_DEFAULT_READTIMEOUT: 60000
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_USERNAME: serovakatya2911@gmail.com
      SPRING_MAIL_PASSWORD: witiclrgoupdqius
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      LOGGING_LEVEL_COM_EXAMPLE_COMPILERIDE: DEBUG

    depends_on:
      - postgres
      - redis
      - minio
      - dispatcher
    networks:
      - app-network
    volumes:
      - oc-manager-uploads:/app/uploads
      - oc-manager-git-clones:/tmp/git-clones
      - oc-manager-user-photos:/app/user-photos
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M

networks:
  app-network:
    driver: bridge

volumes:
  minio-data:
  postgres-data:
  oc-manager-uploads:
  oc-manager-git-clones:
  oc-manager-user-photos:

